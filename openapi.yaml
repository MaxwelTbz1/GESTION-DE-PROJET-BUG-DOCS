openapi: 3.0.3
info:
  title: GESTION DE PROJET - BUG
  version: 1.0.0

servers:
  - url: http://localhost:5000
  - https://gestion-de-projet-bug.onrender.com

tags:
  - name: Auth
  - name: Projects
  - name: Bugs

paths:

  ########################
  # üîê AUTHENTIFICATION #
  ########################

  /api/auth/register:
    post:
      tags: [Auth]
      summary: Inscription d'un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "201":
          description: Utilisateur inscrit
        "400":
          description: Email d√©j√† utilis√©
        "500":
          description: Erreur serveur

  /api/auth/login:
    post:
      tags: [Auth]
      summary: Connexion d'un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Connexion r√©ussie
        "401":
          description: Identifiants invalides
        "500":
          description: Erreur serveur

  /api/auth/me:
    get:
      tags: [Auth]
      summary: R√©cup√©rer l'utilisateur courant
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Donn√©es utilisateur
        "401":
          description: Non autoris√©

  ########################
  # üìÅ PROJETS           #
  ########################

  /api/projects:
    post:
      tags: [Projects]
      summary: Cr√©er un projet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, type]
              properties:
                name:
                  type: string
                type:
                  type: string
      responses:
        "201":
          description: Projet cr√©√©
        "403":
          description: Limite atteinte
        "500":
          description: Erreur serveur

    get:
      tags: [Projects]
      summary: Obtenir tous les projets de l'utilisateur
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des projets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
        "401":
          description: Non autoris√©
        "500":
          description: Erreur serveur

  /api/projects/summary:
    get:
      tags: [Projects]
      summary: Obtenir les d√©tails complet des projets et leurs bugs
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: query
          schema:
            type: string
        - name: withBugs
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: R√©sum√© projet+bugs
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: "#/components/schemas/Project"
                  bugs:
                    type: array
                    items:
                      $ref: "#/components/schemas/Bug"

  ######################
  # üêõ BUGS             #
  ######################

  /api/bugs/{projectId}:
    post:
      tags: [Bugs]
      summary: Cr√©er un bug pour un projet donn√©
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BugInput"
      responses:
        "201":
          description: Bug cr√©√©
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bug"
        "403":
          description: Acc√®s interdit au projet
        "404":
          description: Projet non trouv√©
        "500":
          description: Erreur serveur

  /api/bugs:
    get:
      tags: [Bugs]
      summary: Obtenir tous les bugs (filtres, pagination)
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
            enum: ["log", "error", "warning", "info"]
        - name: status
          in: query
          schema:
            type: string
            enum: ["en cours", "termin√©e", "supprim√©e"]
        - name: from
          in: query
          schema:
            type: string
            format: date
        - name: to
          in: query
          schema:
            type: string
            format: date
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Liste des bugs filtr√©e
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
                  bugs:
                    type: array
                    items:
                      $ref: "#/components/schemas/Bug"
        "500":
          description: Erreur serveur

  /api/bugs/{bugId}:
    get:
      tags: [Bugs]
      summary: D√©tails complets d‚Äôun bug (avec projet et utilisateur)
      security:
        - bearerAuth: []
      parameters:
        - name: bugId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: D√©tail complet
          content:
            application/json:
              schema:
                type: object
                properties:
                  bug:
                    $ref: "#/components/schemas/Bug"
                  project:
                    $ref: "#/components/schemas/Project"
                  user:
                    $ref: "#/components/schemas/User"
        "403":
          description: Non autoris√©
        "404":
          description: Bug ou projet non trouv√©
        "500":
          description: Erreur serveur

    delete:
      tags: [Bugs]
      summary: Supprimer un bug existant
      security:
        - bearerAuth: []
      parameters:
        - name: bugId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Bug supprim√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Bug supprim√© avec succ√®s
        "403":
          description: Non autoris√©
        "404":
          description: Bug non trouv√©
        "500":
          description: Erreur serveur


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    BugInput:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          example: "Erreur d'affichage"
        description:
          type: string
          example: "Le bouton ne s'affiche pas en responsive"
        type:
          type: string
          enum: ["log", "error", "warning", "info"]
          example: error
        status:
          type: string
          enum: ["en cours", "termin√©e", "supprim√©e"]
          example: en cours

    Bug:
      allOf:
        - $ref: "#/components/schemas/BugInput"
        - type: object
          properties:
            _id:
              type: string
            projectId:
              type: string
            userId:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time

    Project:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        type:
          type: string
        CountBug:
          type: integer

    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
